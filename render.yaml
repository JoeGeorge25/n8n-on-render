     services:
  - type: web
    name: n8n
    env: docker
    plan: starter
    autoDeploy: true
    dockerfilePath: ./Dockerfile
    healthCheckPath: /healthz
    disk:
      name: n8n-data
      mountPath: /data
      sizeGB: 5
    envVars:
      - key: N8N_PORT
        value: 5678
      - key: N8N_PROTOCOL
        value: https
      - key: N8N_EDITOR_BASE_URL
        fromService:
          type: web
          name: n8n
          property: url
      - key: WEBHOOK_URL
        fromService:
          type: web
          name: n8n
          property: url
      - key: N8N_HOST
        value: 0.0.0.0
      - key: N8N_SECURE_COOKIE
        value: "false"
      - key: N8N_DIAGNOSTICS_ENABLED
        value: "false"
      - key: EXECUTIONS_MODE
        value: regular

      # DB OPTION 1: PostgreSQL (recommended)
      - key: DB_TYPE
        value: postgres
      - key: DB_POSTGRESDB_HOST
        fromDatabase:
          name: n8n-postgres
          property: host
      - key: DB_POSTGRESDB_PORT
        fromDatabase:
          name: n8n-postgres
          property: port
      - key: DB_POSTGRESDB_DATABASE
        fromDatabase:
          name: n8n-postgres
          property: database
      - key: DB_POSTGRESDB_USER
        fromDatabase:
          name: n8n-postgres
          property: user
      - key: DB_POSTGRESDB_PASSWORD
        fromDatabase:
          name: n8n-postgres
          property: password
      - key: DB_POSTGRESDB_SCHEMA
        value: public
      - key: DB_POSTGRESDB_SSL
        value: "false"

      # Security (set in dashboard the first time and keep it forever)
      - key: N8N_ENCRYPTION_KEY
        generateValue: true

databases:
  - name: n8n-postgres
    plan: starter
